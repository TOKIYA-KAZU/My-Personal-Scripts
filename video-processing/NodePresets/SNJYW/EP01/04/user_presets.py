import nuke
def nodePresetsStartup():
  nuke.setUserPreset("ColorCorrect", "SNJYW/EP01/04/Cold", {'saturation': '0.8', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'gain': '0.5959046483 0.8109046817 0.985904634 1', 'label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Cold')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Cold'), nuke.thisNode())}]\n"})
  nuke.setUserPreset("ColorCorrect", "SNJYW/EP01/04/Light_Cold", {'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'saturation': '0.9', 'gain': '7.131332874 10.29933357 10.73133278 10', 'gamma': '0.8', 'label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Light_Cold')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Light_Cold'), nuke.thisNode())}]\n"})
  nuke.setUserPreset("ColorCorrect", "SNJYW/EP01/04/Warm", {'saturation': '0.8', 'note_font': '\xe5\xbe\xae\xe8\xbd\xaf\xe9\x9b\x85\xe9\xbb\x91', 'gain': '1.340000033 1 0.6600000262 1', 'label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Warm')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Warm'), nuke.thisNode())}]\n"})
  nuke.setUserPreset("ColorCorrect", "SNJYW/EP01/04/Env_OutRoom_Cold", {'saturation': '0.8', 'gain': '0.4131160975 0.8129324317 1.190536261 1', 'label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Env_OutRoom_Cold')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Env_OutRoom_Cold'), nuke.thisNode())}]\n"})
  nuke.setUserPreset("Grade", "SNJYW/EP01/04/Fog", {'white': '5', 'black': '0.1134375036 0.1063939929 0.100833334 0.05999999866', 'maskChannelMask': 'rgba.blue', 'gamma': '0.7240519524 1.696350932 2.585900068 1', 'label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Fog')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Fog'), nuke.thisNode())}]\n"})
  nuke.setUserPreset("Group11214797875975229693", "SNJYW/EP01/04/SSS", {'Child-1 indicators': '16', 'Child18 black': '0 {parent.lift.g} 0 0', 'Child30 selected': 'true', 'Child23 mix': '0', 'Child-1 label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/SSS')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/SSS'), nuke.thisNode())}]\n[value in]\n[knob_default saturation 1]\n[knob_default gain 1]\n[knob_default gamma 1]\n[knob_default layer_mix 1]", 'Child23 disable': '{"\\[string is digit \\[input parent 0]]"}', 'Child28 saturation': '{parent.saturation.b}', 'Child27 saturation': '{parent.saturation.g}', 'Child25 alpha': 'depth.Z', 'Child1 channels': 'rgba', 'Child15 mix': '{1-parent.layer_mix}', 'Child26 channels': 'rgba.red -rgba.green -rgba.blue -rgba.alpha', 'Child18 white': '1 {parent.gain.g} 1 1', 'Child21 operation': 'copy', 'Child28 maskChannelMask': 'rgba.blue', 'Child19 black': '0 0 {parent.lift.b} 0', 'Child23 value': '0', 'Child17 maskChannelMask': 'rgba.red', 'Child21 Achannels': 'rgb', 'Child30 conversion': 'logarithmic compress', 'Child19 gamma': '1 1 {parent.gamma.b} 1', 'Child14 channels': 'none none none rgba.alpha', 'Child17 label': '[knob parent.Merge1.Achannels [value channels]]\n[knob parent.Merge1.Bchannels [value channels]]\n[knob parent.Merge1.output [value channels]]', 'Child29 in': 'SSS', 'Child17 gamma': '{parent.gamma.r} 1 1 1', 'Child-1 saturation': '0.8', 'Child-1 lift': '0 0 0', 'Child-1 gain': '1.25999999 0.6253379583 0.3905999959', 'Child26 maskChannelMask': 'rgba.red', 'Child27 maskChannelMask': 'rgba.green', 'Child18 channels': '{{parent.R1.channels}}', 'Child17 white': '{parent.gain.r} 1 1 1', 'Child27 channels': '-rgba.red rgba.green -rgba.blue -rgba.alpha', 'Child19 channels': '{{parent.R1.channels}}', 'Child22 disable': '{1-parent.preview}', 'Child22 operation': 'copy', 'Child21 output': 'rgb', 'Child26 saturation': '{parent.saturation.r}', 'Child23 channels': 'rgba', 'Child-1 gamma': '1.629999995 1.289999843 0.9800000191', 'Child-1 layer_mix': '1', 'Child25 channels': 'alpha', 'Child-1 tile_color': '0x7aa9ffff', 'Child28 channels': '-rgba.red -rgba.green rgba.blue -rgba.alpha', 'Child21 Bchannels': 'rgb', 'Child14 whitepoint': '0.075', 'Child17 black': '{parent.lift.r} 0 0 0', 'Child15 whitepoint': '0.01', 'Child30 softclip_min': '0', 'Child18 gamma': '1 {parent.gamma.g} 1 1', 'Child19 white': '1 1 {parent.gain.b} 1', 'Child19 maskChannelMask': 'rgba.blue', 'Child18 maskChannelMask': 'rgba.green'})
  nuke.setUserPreset("Group11214797875975229693", "SNJYW/EP01/04/Window_Emission", {'Child18 black': '0 {parent.lift.g} 0 0', 'Child30 selected': 'true', 'Child19 channels': '{{parent.R1.channels}}', 'Child-1 label': "[python {str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Window_Emission')}]\n\xe9\xa2\x84\xe8\xae\xbe\xe9\x94\x81\xe5\xae\x9a :[python {nuke.applyUserPreset('', str('SNJYW/EP01/' + os.path.splitext(os.path.basename(nuke.scriptName()))[0].split('_')[-2] + '/Window_Emission'), nuke.thisNode())}]\n[value in]\n[knob_default saturation 1]\n[knob_default gain 1]\n[knob_default gamma 1]\n[knob_default layer_mix 1]", 'Child23 disable': '{"\\[string is digit \\[input parent 0]]"}', 'Child28 saturation': '{parent.saturation.b}', 'Child27 saturation': '{parent.saturation.g}', 'Child25 alpha': 'depth.Z', 'Child1 channels': 'rgba', 'Child15 mix': '{1-parent.layer_mix}', 'Child17 gamma': '{parent.gamma.r} 1 1 1', 'Child26 channels': 'rgba.red -rgba.green -rgba.blue -rgba.alpha', 'Child18 white': '1 {parent.gain.g} 1 1', 'Child21 operation': 'copy', 'Child28 maskChannelMask': 'rgba.blue', 'Child19 black': '0 0 {parent.lift.b} 0', 'Child23 value': '0', 'Child17 maskChannelMask': 'rgba.red', 'Child21 Achannels': 'rgb', 'Child30 conversion': 'logarithmic compress', 'Child19 gamma': '1 1 {parent.gamma.b} 1', 'Child14 channels': 'none none none rgba.alpha', 'Child17 label': '[knob parent.Merge1.Achannels [value channels]]\n[knob parent.Merge1.Bchannels [value channels]]\n[knob parent.Merge1.output [value channels]]', 'Child29 in': 'Window_Emission', 'Child1 size': '18.9', 'Child-1 saturation': '0 0 0', 'Child-1 lift': '0 0 0', 'Child-1 gain': '6.920000076 3.991456032 0.553599894', 'Child26 maskChannelMask': 'rgba.red', 'Child27 maskChannelMask': 'rgba.green', 'Child18 channels': '{{parent.R1.channels}}', 'Child17 white': '{parent.gain.r} 1 1 1', 'Child27 channels': '-rgba.red rgba.green -rgba.blue -rgba.alpha', 'Child16 whitepoint': '0.1', 'Child22 disable': '{1-parent.preview}', 'Child22 operation': 'copy', 'Child21 output': 'rgb', 'Child26 saturation': '{parent.saturation.r}', 'Child23 channels': 'rgba', 'Child-1 gamma': '1.620000005 1.49849987 1.133999944', 'Child-1 layer_mix': '1', 'Child25 channels': 'alpha', 'Child-1 tile_color': '0x7aa9ffff', 'Child28 channels': '-rgba.red -rgba.green rgba.blue -rgba.alpha', 'Child21 Bchannels': 'rgb', 'Child14 whitepoint': '0.04', 'Child17 black': '{parent.lift.r} 0 0 0', 'Child15 whitepoint': '0.01', 'Child30 softclip_min': '0', 'Child18 gamma': '1 {parent.gamma.g} 1 1', 'Child19 white': '1 1 {parent.gain.b} 1', 'Child0 size': '83', 'Child19 maskChannelMask': 'rgba.blue', 'Child18 maskChannelMask': 'rgba.green'})
